<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Json Lee</title>
    <description>Copy Right (c) &lt;a href=&quot;http://lijiansong.github.io&quot; target=&quot;_blank&quot;&gt;Json Lee&lt;/a&gt;.</description>
    <link>http://lijiansong.github.io/</link>
    <atom:link href="http://lijiansong.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 07 Aug 2017 00:01:43 +0800</pubDate>
    <lastBuildDate>Mon, 07 Aug 2017 00:01:43 +0800</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Tiny Storm SQL --- A Real Time Stream Data Analysis Interface for Apache Storm</title>
        <description>&lt;div class=&quot;message&quot;&gt;
SQL is a well-adopted interface especially for those non-computer major people. Several projects including Hive, Drill, Phoenix and Spark have already invested significantly in their SQL layers. Here we implement a Storm-based query language system for real time stream data analysis. 
&lt;/div&gt;
&lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt;

&lt;h2 id=&quot;relevant-research&quot;&gt;Relevant Research&lt;/h2&gt;
&lt;p&gt;For Apache storm &lt;a href=&quot;http://storm.apache.org/2017/03/29/storm110-released.html&quot;&gt;1.1.0&lt;/a&gt; or later version, it has already provided Streaming SQL. In VLDB-2016, &lt;a href=&quot;http://data.epfl.ch/&quot;&gt;EPFL DATA Lab&lt;/a&gt; implemented a streaming online query processing / analytics engine based on Apache Storm named &lt;a href=&quot;https://github.com/epfldata/squall&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;squall&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;system-architecture&quot;&gt;System Architecture&lt;/h2&gt;
&lt;p&gt;Here we just implement a similar &lt;code class=&quot;highlighter-rouge&quot;&gt;demo&lt;/code&gt; system which supports real time stream data analysis. The whole architecture is shown below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog-img/2017_06_05_architecture.png&quot; alt=&quot;image&quot; title=&quot;System Architecture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As we can see from the above picture, when the user type a SQL-formatted query clause, the query sequence will be translated into a &lt;code class=&quot;highlighter-rouge&quot;&gt;query plan&lt;/code&gt; which presents in the shape of a directed acyclic graph. The DAG-formatted query plan is optimized.
Then it will be mapped into a Storm topology dynamically. Then the topology will be submitted to Storm cluster for running.&lt;/p&gt;

&lt;h2 id=&quot;key-compoments&quot;&gt;Key Compoments&lt;/h2&gt;

&lt;p&gt;Here, the SQL parser is implemented by taking use of &lt;a href=&quot;https://github.com/antlr/antlr4&quot;&gt;ANTLR&lt;/a&gt;. &lt;a href=&quot;http://www.antlr.org/&quot;&gt;ANTLR(ANother Tool for Language Recognition)&lt;/a&gt; is a powerful parser generator. Here we design the following BNF-formatted grammar for SQL:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;grammar sql;

@header {
package storm_sql.parser;
}

root
    : 'select' select_list
    'from' table_sources
    ('where' search_condition)?
    ('group' 'by' group_by_item (',' group_by_item)*)?
    ('having' search_condition)?
    ('within' within_time)?
    ;


select_list
    : select_list_elem (',' select_list_elem)*	#printSelectList
    ;

select_list_elem
    : /*(table_name=ID '.' column_name=ID)*/
    expression					#printSelectListElem
    | aggregate_function'(' expression ')'	#selectAggregateFunction
    ;

ID
    : [a-zA-Z_][a-zA-Z_0-9]*
    ;

table_sources
    : table_source (',' table_source)*		#tableSources
    ;

table_source
    : ID					#tableSource
    ;

expression
    : aggregate_function			#exprAggrFunc
    | (table_name '.' column_name)		#expr
    | NUM					#num
    | ID                    #id
    ;

NUM
    : '-'[1-9][0-9]*
    | '0'
    | [1-9][0-9]*
    ;

table_name
    : ID					#tableName
    ;

column_name
    : ID					#columnName
    ;

aggregate_function
    : 'avg' | 'max' | 'min' | 'sum'| 'count'
    ;

search_condition
    : search_condition_and ('and' search_condition_and)*	#printSearchCondition
    ;

search_condition_and
    : expression comparison_operator expression			#printSearchConditionAnd
    //| '(' search_condition ')'
    ;

comparison_operator
    : '=' | '&amp;gt;' | '&amp;lt;' | '&amp;lt;=' | '&amp;gt;=' | '!='
    ;

group_by_item
    : expression						#groupByItem
    ;

within_time
    : (NUM)							#withinTime
    ;

WS  : [ \t\r\n]+ -&amp;gt; skip ; // Define whitespace rule, toss it out

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;By ANTLR &lt;code class=&quot;highlighter-rouge&quot;&gt;-visitor&lt;/code&gt; tool, we can easily visit the AST through &lt;code class=&quot;highlighter-rouge&quot;&gt;visitor design pattern&lt;/code&gt;. We store the necessary info of the sql sequence to build the DAG-formatted query plan. Here we use &lt;a href=&quot;https://github.com/jgrapht/jgrapht&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JGraphT&lt;/code&gt;&lt;/a&gt; to traverse the DAG, since it provides various interfaces for handling the DAG. We can eliminate the trouble of reinventing the wheel.
To automatically generate Storm topology from the DAG-formatted query plan, we need to mark the father and child of each node in the DAG. In the DAG, the source tables are Storm spouts in Storm topology. Similarly, the operators of the DAG is storm bolts in Storm topology, so you need to implement these bolts ahead of schedule. Notice, join and group-by operators are time window based, in Storm, you can simply extend &lt;code class=&quot;highlighter-rouge&quot;&gt;BaseWindowedBolt&lt;/code&gt; to implement the concepts of time window. Of course, you also have to connect to data sources to create Storm spouts to get the stream data. Here we simply create two spouts named &lt;code class=&quot;highlighter-rouge&quot;&gt;student and tc&lt;/code&gt; to simulate the stream source data.&lt;/p&gt;

&lt;p&gt;The key features of the system include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;the SQL parser is based on &lt;code class=&quot;highlighter-rouge&quot;&gt;ANTLR&lt;/code&gt;, it is universal for users’ typing input;&lt;/li&gt;
  &lt;li&gt;the DAG-formatted query plan is based on &lt;code class=&quot;highlighter-rouge&quot;&gt;JGraphT&lt;/code&gt;, you can access any vertex as you want;&lt;/li&gt;
  &lt;li&gt;the Storm topology is generated from the query plan &lt;code class=&quot;highlighter-rouge&quot;&gt;dynamically&lt;/code&gt;, that is to say the whole system is not limited to a specific application or a specific stream data.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course, the demo system is nothing but a demo, there is a lot to be improved. However, you can follow the whole architecture to develop your own interface.&lt;/p&gt;

&lt;p&gt;For more details about the src, see &lt;a href=&quot;https://github.com/lijiansong/distribution/tree/master/storm/storm-sql/storm-sql/course-project&quot;&gt;here…&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Any questions or suggestions, feel free to open an issue @&lt;a href=&quot;https://github.com/lijiansong/distribution/issues&quot;&gt;here&lt;/a&gt; or e-mail me to &lt;em&gt;lijiansong@ict.ac.cn&lt;/em&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 06 Jun 2017 01:02:15 +0800</pubDate>
        <link>http://lijiansong.github.io/java/2017/06/06/tiny-storm-sql/</link>
        <guid isPermaLink="true">http://lijiansong.github.io/java/2017/06/06/tiny-storm-sql/</guid>
        
        <category>platform tool</category>
        
        
        <category>Java</category>
        
      </item>
    
      <item>
        <title>ELF Parser</title>
        <description>&lt;div class=&quot;message&quot;&gt;
In Unix-like system, the Executable and Linkable Format (ELF, formerly called Extensible Linking Format) is a common standard file format for executables, object code, shared libraries, and core dumps. 
&lt;/div&gt;
&lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;First published in the System V Release 4 (SVR4) Application Binary Interface (ABI) specification,and later in the Tool Interface Standard, it was quickly accepted among different vendors of Unix systems, such as Linux and etc.
ELF is flexible and extensible by design, and it is not bound to any particular processor or architecture. This has allowed it to be adopted by many different operating systems on many different platforms.&lt;/p&gt;

&lt;p&gt;Each ELF file is made up of one ELF header, followed by file data. The file data can include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Program header table, describing zero or more segments&lt;/li&gt;
  &lt;li&gt;Section header table, describing zero or more sections&lt;/li&gt;
  &lt;li&gt;Data referred to by entries in the program header table or section header table&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The segments contain information that is necessary for runtime execution of the file, while sections contain important data for linking and relocation. Any byte in the entire file can be owned by at most one section, and there can be orphan bytes which are not owned by any section.
More details about ELF, see &lt;a href=&quot;https://web.archive.org/web/20130403001804/http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/binary-formats.html&quot;&gt;here…&lt;/a&gt;
Many tools can be taken use of to parse the ELF file, such as &lt;code class=&quot;highlighter-rouge&quot;&gt;readelf, elfutils, elfdump, objdump&lt;/code&gt;…&lt;/p&gt;

&lt;p&gt;Here I implement a my own elf-parser. There is nothing difficult to implement it, the whole work is mainly about &lt;code class=&quot;highlighter-rouge&quot;&gt;file IO &amp;amp; string parsing&lt;/code&gt;…
You can follow the following steps to build it…&lt;/p&gt;

&lt;p&gt;##Build&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd xxx_dir
$ make
$ ./elf-parser ./test-cases/hello/hello
$ make clean
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;To generate the assembly code, you can type the following cmds:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ g++ -E hello.cpp -o hello.i
$ g++ -S hello.cpp -o hello.s
$ g++ -c hello.s -o hello.o
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;For more details about the src, see &lt;a href=&quot;https://github.com/lijiansong/Postgraduate-Course/tree/master/tools/elf-parser&quot;&gt;here…&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Any questions or suggestions, feel free to open an issue @&lt;a href=&quot;https://github.com/lijiansong/Postgraduate-Course/issues&quot;&gt;here&lt;/a&gt; or e-mail me to &lt;em&gt;lijiansong@ict.ac.cn&lt;/em&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 17 Mar 2017 11:02:15 +0800</pubDate>
        <link>http://lijiansong.github.io/cpp/2017/03/17/elf-parser/</link>
        <guid isPermaLink="true">http://lijiansong.github.io/cpp/2017/03/17/elf-parser/</guid>
        
        <category>platform tool</category>
        
        
        <category>Cpp</category>
        
      </item>
    
      <item>
        <title>Modify the Source Code of Google's Open-source Framework --- Blockly</title>
        <description>&lt;div class=&quot;message&quot;&gt;
Blockly is an open-source framework under Apache 2.0 License for creating visual programming editors. It is a project of Google,which is able to run in web browser, Android or iOS operating system. 
Blockly uses blocks that link together to make writing code easier, and can generate JavaScript, Python, PHP, Lua or Dart code automatically. It can also be customised to generate code in any computer language.
&lt;/div&gt;
&lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;The use interface of Blockly consists of a toolbox, which holds all the availble blocks and a workspace, where you
place the blocks. There is a trashcan on the workspace which deletes any blocks dragged onto it. As is shown in the following picture:
&lt;img src=&quot;/assets/blog-img/2017_02_20_workspace.png&quot; alt=&quot;image&quot; title=&quot;Blockly workspace&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Blockly comes with a basic set of blocks for common operations, but can be customized by adding more blocks. 
New blocks require a block definition and a generator. It is shown below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog-img/2017_02_20_units.png&quot; alt=&quot;image&quot; title=&quot;Blockly programming unit&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog-img/2017_02_20_example.png&quot; alt=&quot;image&quot; title=&quot;Blockly programming example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The definition describes the block’s appearance and the generator describes the block’s translation to executable code. 
There is an example program called Block Factory which makes writing the block definition easier by using Blockly blocks to construct a new block.&lt;/p&gt;

&lt;p&gt;Now all its functions is adequate for most developers. However, it doesn’t support dynamical loading blocks, e.g. in Android OS, the blocks’ JSON-formated definition files are stored in the &lt;code class=&quot;highlighter-rouge&quot;&gt;assets&lt;/code&gt; diirectory, obviously, all the files stored in this directory are regarded as system resources, they will be packaged into the .apk file, all of them are read only, i.e. they can only be read, but cannot be written back.&lt;/p&gt;

&lt;p&gt;To manage to &lt;code class=&quot;highlighter-rouge&quot;&gt;dynamically load the blocks&lt;/code&gt;, I tried two methods…&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Hook the OS functions. &lt;br /&gt;
When the app process load the assets resources, we can &lt;code class=&quot;highlighter-rouge&quot;&gt;intercept relevant methods that load the blocks definition files&lt;/code&gt;, read them out into other directory, and dynamically generate our own definition files then replace the paramaters with the new buffer that consists of the original definition files and the new generated file.
&lt;br /&gt;It may sound unbelievable, however, there are many frameworks support dynamically hook Operating System’s process that is running, e.g. &lt;a href=&quot;https://github.com/googol-lab/Xposed&quot;&gt;Xposed&lt;/a&gt; and &lt;a href=&quot;https://github.com/googol-lab/adbi&quot;&gt;adbi&lt;/a&gt;. 
&lt;br /&gt;However, Xposed may be unsuitable, since if you want to take use of its Java API you need to root your Android device, it may be unacceptable for most users. 
&lt;br /&gt;Another instrumentation framework is adbi, which is short for Android Dynamic Binary Instrumentation Toolkit. With it you don’t need to root your Android device, I haven’t tried these framework yet, it may be useful, but Xposed does work.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Modify the source code of Blockly to make it supporting dynamical loading blocks. &lt;br /&gt;
For more details, see &lt;a href=&quot;https://github.com/lijiansong/blockly-android&quot;&gt;here…&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 20 Feb 2017 11:02:15 +0800</pubDate>
        <link>http://lijiansong.github.io/java/android/tech/2017/02/20/modify-blockly/</link>
        <guid isPermaLink="true">http://lijiansong.github.io/java/android/tech/2017/02/20/modify-blockly/</guid>
        
        <category>platform tool</category>
        
        
        <category>Java</category>
        
        <category>Android</category>
        
        <category>Tech</category>
        
      </item>
    
      <item>
        <title>Crazy Coder</title>
        <description>&lt;div class=&quot;message&quot;&gt;
&amp;#x5BD2;&amp;#x5047;&amp;#x56DE;&amp;#x5BB6;&amp;#x4E00;&amp;#x5468;&amp;#xFF0C;&amp;#x8BFB;&amp;#x4E86;&amp;#x4E00;&amp;#x672C;&amp;#x5F88;&amp;#x6709;&amp;#x610F;&amp;#x601D;&amp;#x7684;&amp;#x4E66;&amp;#x300A;&amp;#x75AF;&amp;#x72C2;&amp;#x7684;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5458;&amp;#x300B;&amp;#xFF0C;&amp;#x7B97;&amp;#x662F;novel&amp;#x7684;&amp;#x90A3;&amp;#x4E00;&amp;#x7C7B;&amp;#x5427;&amp;#x3002;&amp;#x8FD9;&amp;#x672C;&amp;#x4E66;&amp;#x63CF;&amp;#x5199;&amp;#x4E86;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5458;&amp;#x4E0D;&amp;#x540C;&amp;#x5E38;&amp;#x4EBA;&amp;#x7684;&amp;#x751F;&amp;#x6D3B;&amp;#x65B9;&amp;#x5F0F;&amp;#x3001;&amp;#x4EF7;&amp;#x503C;&amp;#x89C2;&amp;#x5FF5;&amp;#x548C;&amp;#x8F6F;&amp;#x4EF6;&amp;#x884C;&amp;#x4E1A;&amp;#x4E2D;&amp;#x7684;&amp;#x5F62;&amp;#x5F62;&amp;#x8272;&amp;#x8272;&amp;#x7684;&amp;#x4EBA;&amp;#x548C;&amp;#x4E8B;&amp;#xFF0C;&amp;#x611F;&amp;#x89C9;&amp;#x4E66;&amp;#x4E2D;&amp;#x7684;&amp;#x6BCF;&amp;#x4E00;&amp;#x53E5;&amp;#x90FD;&amp;#x582A;&amp;#x79F0;&amp;#x7ECF;&amp;#x5178;...
&lt;/div&gt;
&lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;1.要么做第一个，要么做最好的一个。&lt;/p&gt;

&lt;p&gt;2.一辆宝马7X，你敢开230Km/h的速度在马路上跑么？不敢。奔奔呢？是奔奔就敢，只要人不出事，别说跑230，就是跑320都不怕？什么是牛B？把卫星放上天那不叫牛B，把汽车放上天才叫牛B。&lt;/p&gt;

&lt;p&gt;3.什么程序优化啊，都抵不上有钱，有钱就是最好的优化。说什么“效率就是金钱”，其实“金钱就是效率”。&lt;/p&gt;

&lt;p&gt;4.中国人和外国人很大不同就在于外国人总想热衷于第一时间把自己的新发现公布出来以此向广大人民群众展示自己的水平。中国人往往喜欢把自己的新发现阴在心里，自己偷偷垄断享用。唯恐被第二个人知道。公布出去，相关部门肯定马上解决。&lt;/p&gt;

&lt;p&gt;5.所谓好的病毒就是要：“持续时间特别长，波及范围特别广，破坏力特别大。”&lt;/p&gt;

&lt;p&gt;6.能进别人系统偷东西，那就是小偷；能进别人系统又不偷东西，那就是黑客。&lt;/p&gt;

&lt;p&gt;7.当你不是黑客的时候，总说：“我是个黑客”。当你真正成为黑客的时候，你往往会说：“我不是黑客”&lt;/p&gt;

&lt;p&gt;8.程序员是值得尊敬的，程序员的双手是魔术师的双手，他们把枯燥无味的代码变成了丰富多彩的软件。&lt;/p&gt;

&lt;p&gt;9.有个笑话说小白兔去问副食店老板：“有100个包子吗？”老板说：“没有。”小白兔走了。第二天，小白兔又问：“有100个包子吗？”老板说：“没有。”小白兔走了。第三天，小白兔又问：“有100个包子吗？”老板高兴地说：“有。”小白兔说：“那我买两个包子。”&lt;/p&gt;

&lt;p&gt;10.正如美女都不在大街上逛一样，高手根本不在群里混。美女去哪里了？多半在私家车里，高手去哪里了？多半在写程序。&lt;/p&gt;

&lt;p&gt;11.所以说做程序员，要做就得做高手，做什么都不重要关键的是做成牛人。成了牛人就不一样了，掌握公司的核心技术，老板感随便让你走人吗？你一周随便去一个公司或者创业，对他都是极大的压力。&lt;/p&gt;

&lt;p&gt;12.一个人静静的坐在电脑前写大卖的感觉，那是什么感觉？那就是武林高手闭关修炼的感觉。&lt;/p&gt;

&lt;p&gt;13.事情毕竟是件不雅的事，所以大部分人还是要偷偷地放。比如几十个人挤在公交车里，冷不丁谁偷偷放个屁，于是大家一边捂着鼻子一边互 相指责：“你放的，你放的。”而真正放屁的人看到这情况，为掩人耳目，也充当起南郭先生，不断说：“谁放的？谁放的？”在这种情况下，屁很容易就放出来了。&lt;/p&gt;

&lt;p&gt;14.资本家啊，精于成本计算。难道就没想到雇佣十个劳动生产率为0的人，就算雇佣车成本是10。也顶不上一个劳动生产率为1，雇佣成本为10的人，因为前面的那10的成本可是完全打了水漂啊。&lt;/p&gt;

&lt;p&gt;15.巴依把阿凡提喊来想奚落他，问到：“一边是金钱，一边是道德，你选择什么？”阿凡提想都没想立刻回答：“要钱！”巴依哈哈大笑：“你阿凡提原来也是个俗人呀！如果是我，我会选择道德。”阿凡提回答：“对呀，尊敬的巴依，人缺什么就会选择什么！我选择钱，是因为不缺道德，缺钱，而您选择道德，正好说明您有的是钱但是缺德呀！”&lt;/p&gt;

&lt;p&gt;16.所以从某种意义上说，电影好不好看，并不是电影本身好不好看，而是跟谁看。&lt;/p&gt;

&lt;p&gt;17刘备只懂一个道理：老婆如衣服，兄弟如手足，衣服断尚可续，手足断安可续？所以，说实话，在你最困难的时候，兄弟才是最可靠的，兄弟才永远不会抛弃你。”&lt;/p&gt;

&lt;p&gt;18.一本好书，就像高级武功秘籍一样，哪怕只从里面领悟个一招半式，功力提升起来都是惊人的，眉超风学的那半生不熟的九阴真经就是证明。&lt;/p&gt;

&lt;p&gt;19.所以练武功和写程序一样，不在乎你修炼了几十年还是几百年，也不在乎你少林武当娥眉拜了多少门派，关键是你有没有把一门武艺炼到出神入化的境界。学武艺，最忌讳总想着去追求大而全，你要明白，其实只需要“打狗棍法”这么一招，就足够你掌舵丐帮，受用终生。&lt;/p&gt;

&lt;p&gt;20.记住，女人都是假的，狗才永远不会背叛你，狗是唯一爱你比爱自己还多的东西。&lt;/p&gt;

&lt;p&gt;21.我觉得疯狂没什么不好，十九世纪初，当时的科学理论认为凡是比空气重的东西都不可能长时间飞行，所以他们认为莱特兄弟是疯子。可最后疯子赢了，正因为有他们这些疯子，今天我们才能坐飞机，才能放卫星。疯子都是不要命的，怕死的怕不怕死的，不怕死的怕不要命的，所以疯子的力量大啊！在我看来，程序员只有一种――疯狂的程序员。&lt;/p&gt;

&lt;p&gt;22.提升功力大低有两种方法，一是自己不断写代码，不断完善，不断把自己的代码写好，二是看牛人的代码。牛人的代码实在太高深了，一句看似平凡的语句，也许背后都蕴含着惊天地泣鬼神的智慧。现在你看不出什么端倪，等十年八年之后，你猛然醒悟：啊，原来大牛的代码竟是如此博大精深！&lt;/p&gt;

&lt;p&gt;23.我就是看不惯你那读书人的样，经常做出一副搞技术天底下最大的样子。技术再好又如何啊？归根到底还不是要到市场上来，这就是所谓的“科学技术转化为生产力”&lt;/p&gt;

&lt;p&gt;24.对男人来说钱什么都不是，但是你没钱，你就失去了让她了解你的机会。对女人来说漂亮什么都不是，但是你不漂亮，你就失去了让他了解你的机会。&lt;/p&gt;

&lt;p&gt;25.现在的女人面临的最大的敌人是啥？不是别的女人，她们最大的敌人是电脑。搞IT的就不说了，他们的女人起码有80%很想砸电脑。其他行业的呢？要是男人迷上了游戏，迷上了上网怎么办。所以女人们，现在就得考虑：如果有一天，我们必须和游戏一起争夺男人，我们该怎么做？&lt;/p&gt;

&lt;p&gt;26.人不怕被识破也不怕丢脸，怕就怕被当场识破和当众丢脸。&lt;/p&gt;

&lt;p&gt;27.大四的招聘会，如果我也参加，但不是去参加招聘而是去招聘人，那该有多好。&lt;/p&gt;

&lt;p&gt;28.你要是交了很多钱，你就是上帝，就是VIP。叫你VIP实际上是叫你VERY IMPORTANT PIG ！为啥？因为你老给人家送钱，所以你就是VIP。&lt;/p&gt;

&lt;p&gt;29.虽然说“顾客就是上帝”，现在好多顾客也确实在付过钱后把自己当成了上帝。东西验收是你签的字，钱我也拿了，老子现在就是上帝！&lt;/p&gt;

&lt;p&gt;30.本来大学生就能解决的却一定要让研究生来解决，这叫“对工作重视”；本来一个人就能做的却一定要让三四个人甚至一个小组一起上，这叫“人多力量大”。&lt;/p&gt;

&lt;p&gt;31.人就是如此，哪怕你某一方面牛上天了又如何？你还不是有不懂的地方。比尔?盖茨不会拍戏，张艺谋不会唱歌，周杰伦不会写程序。&lt;/p&gt;

&lt;p&gt;32.男人，最重要的是什么？一定要信守自己的承诺。如果你没把握做到，最好就不要去承诺，你什么也不承诺，至少别人不会看不起你。&lt;/p&gt;

&lt;p&gt;33.禅宗里有段名言，说我们在修炼禅宗之前，山脉就是山脉，河流就是河流；我们在修炼禅宗的时候，山脉不再是山脉，河流不再是河流；等我们修炼完禅宗后，山脉又复为山脉，河流又复为河流。&lt;/p&gt;

&lt;p&gt;34.中国象棋中老王永远都只在自己的城中，运筹于帷幄，国际象棋残局中，老王反而是战斗的主力；中国象棋中兵永远是兵，从你一生下来就是兵，等你拱到对方的底线，你就失去了你所有的价值，国际象棋中，只要兵能够成功冲到对方底线，甚至就可以变成后，正是拿破仑说的：不想当元帅的兵不是好兵。&lt;/p&gt;

&lt;p&gt;35.力的作用是相互的，你打别人有多疼，自己的手就有多疼。与其大家都疼，还不如最开始就不要下手打。&lt;/p&gt;

&lt;p&gt;36.写程序并不是一辈子都只是写代码。IT这一行是相当广博的，不管你是男的还是女的，不管你技术是初级、中级还是高级，你都能在这行中找到你自己合适的位置。如果你真的用心了，它带给你的会是一生的回报。&lt;/p&gt;

&lt;p&gt;37.你知道国际象棋三原则是什么吗？Careful，Careful，Careful。&lt;/p&gt;

&lt;p&gt;38.“现在，最重要的是，我们要好好研究一下如何才能把技术变成钱，否则，我们就永远只是IT界挖沙的民工。”&lt;/p&gt;

&lt;p&gt;39.找个好工作就像找个林志玲般性感漂亮的女朋友。一份优越的白领工作，在很大程度上是用来向别人炫耀的。&lt;/p&gt;

&lt;p&gt;40.男人的工资，和女人的年龄差不多。没钱的时候，最忌讳别人追问自己的工资待遇。可男人的工资，又和女人的年龄不一样。女人要是年轻，别人问她年龄，她自然敢大方地回答。男人的工资呢？要是高了，还是怕别人追问。&lt;/p&gt;

&lt;p&gt;41.“疯狂的程序员”绝对不是靠狂妄和拼命的程序员，而是能够脚踏实地、持续努力的程序员。一个程序员真正做到了这两点，技术上去之后，唯一能够限制他的只有想像力，到那个时候，才算“疯狂的程序员”，这种程序员啊，才能令竞争对手无比恐惧。&lt;/p&gt;

&lt;p&gt;42.技术其实还是我们最需要的东西，以前我们没有过硬的技术，所以疯狂地追求它。现在呢？有了一点技术，便觉得技术不那么重要。如果这样放任下去，等到我们失去技术的那一天，一定会后悔莫及的！&lt;/p&gt;

&lt;p&gt;43.知道，什么是程序员， 能为一两千块工资天天在公司加班加点回家还继续干到两三点甚至通宵的程序员，他们根本就不在乎挣多少钱。程序员，他们想的是什么？他们想的永远都是技术， 他们崇尚的也永远是技术，哪怕我现在身上只有两毛前，只要有志同道合的人跟我聊技术，我一样敢跟他从C++聊到ASM，从API钩子聊到inline hook，从Ring3聊到Ring0。聊完了，今天晚上吃什么？吃什么并不重要，重要的是如何才能获取Kernel基址。&lt;/p&gt;

&lt;p&gt;44.从那以后绝影自知自己不是牛人，更不敢随便跟牛人比，唯恐又被别人笑话。唯牛人与女人最难养也。&lt;/p&gt;

&lt;p&gt;45.技术也是如此，以前天天用SDK，MFC写着程序，去网上看牛人们动辄就是RING0，RING0的，觉得这RING0是如此神奇，于是崇拜得要命，好像一但进入RING0自己便从菜鸟一跃而成牛人，也就是佛法上讲的天天坐在那里不吃不喝，有一天突然就“顿悟”了，成佛了。等有一天要是你真正去搞驱动了，搞内核了，又觉得RING0也不过尔尔，不过就是多了些特权指令，换了些导入库而已。于是搞着RING0的人觉得RING0也不过瘾，没搞RING0的人又觉得RING0如此神奇，崇拜得要命。技术本身没有什么区别，区别在于人们对他的看法而已&lt;/p&gt;

&lt;p&gt;46.听的时候BOSS Liu一直不动声色，这是他值得称道的地方。无论别人的观点如何，也许很幼稚，但听完别人的观点是对人起码的尊重，可这个简单的道理直到现在还有很多人不懂，很多人喜欢粗暴地打断别人的话，当场指正其中的错误，并且以在这种情况下指正别人来体现自己的水平，真是“吾能知人之失而不能见吾之失，吾能指人之小失而不能见吾之大失。”&lt;/p&gt;

&lt;p&gt;47.禅宗里有段名言：说我们在修炼禅宗之前，山脉就是山脉，河流就是河流。我们在修炼禅宗的时候，山脉不再是山脉，河流不再是河流。等我们修炼完禅宗后，山脉又复为山脉，河流复为河流。这就像以前哲学里学的，肯定，否定，否定之否定。这三个阶段，每个阶段都比前一个阶段有进步。虽然第一个阶段和第三个阶段看起来很像，但是他们本质已经不同了。我从学写程序到现在，经过了这么多年，深刻的感觉到这三个阶段。最开始的时候学了点毛皮，能写个Windows下的程序，就觉得自己很牛了，用你的话说，就算卫星也能放上天――人有多大胆，地有多大产啊。后来慢慢接触的CASE多了，接触的人多了。又发现自己其实还是很菜，掌握的东西都很肤浅，比自己牛的人多的是。再到后来，CASE做得更多，接触的人也更多，我又发现，其实自己技术还是不错，‘牛人’谈不上，‘高手’应该算了。&lt;/p&gt;

&lt;p&gt;48.一本好书，就像高级武功秘籍一样，哪怕只从里面领悟个一招半式，功力提升起来都是惊人的，眉超风学的那半生不熟的九阴真经就是证明。所以练武功和写程序一样，不在乎你修炼了几十年还是几百年，也不在乎你少林武当娥眉拜了多少门派，关键是你有没有把一门武艺炼到出神入化的境界。学武艺，最忌讳总想着去追求大而全，你要明白，其实只需要“打狗棍法”这么一招，就足够你掌舵丐帮，受用终生。&lt;/p&gt;

&lt;p&gt;49.百万，这名字不好吗？你知道中国的通用CPU龙芯吗？想你都不知道，他们的芯片代号叫‘狗剩’，够土的名字吧！可是，它有个响亮的英文名：Godson。百万呢，也有个响亮的英文名：Bayerische Motorenwerke。他跟我姓，以后就叫 Bayerische Motorenwerke J。&lt;/p&gt;

&lt;p&gt;50.没有因为不会做饭而饿死的人，只有因为没钱吃饭而饿死的人。对一个男人来说，他可以不会做饭，但绝对不能不会挣钱。&lt;/p&gt;

&lt;p&gt;51.现在你看不出什么端倪，等十年八年之后，就像马岱杀魏延一样，你猛然醒悟：啊，原 来大牛的代码竟是如此博大精深啊，丞相早料到你魏延会造反，我已卧底多时矣！可现在的牛人又实在太小气，代码是轻易不外露的，就像武林前辈一样，绝世武功是传儿不传女，传内不传外。这样的人，就算你像无间道一样去他身边卧底个十年八年，都不一定拿得到他的代码。&lt;/p&gt;

&lt;p&gt;52.你放心，只有脱不下来的衣服，没有脱不下来的壳。&lt;/p&gt;

&lt;p&gt;53.所以，要我说，写程序就两种：要么纯粹就是爱好，不计任何回报，就像我们刚学写程序那样；要么就 是给自己写程序，为自己挣钱，就像我们现在一样。要是一直给资本家写程序，写到最后，就两个字：痛苦！&lt;/p&gt;

&lt;p&gt;54.‘疯狂的程序员’绝对不是靠狂妄和拼命的程序员，而是能够踏实，持续努力的程序员。等你真正做到了这两点，技术上去了，在写程序这个领域，能够限制你的只有你的想像力，到那个时候，你才算个‘疯狂的程序员’，这种程序员阿，是能令竞争对手无比恐惧的。&lt;/p&gt;

&lt;p&gt;55.我告诉她。在很多时候，看起来我的确忽视了她，但我心里一直把她放在最重要的位置。我们在一起几年了，我和她都知道她也并不是个完美的人，我总是很明确地指出她的不足，她的缺点，因为我爱她，我要对她负责，我应该让她不断地变得完美。这些批评她的话让她听了，肯定会不舒服。可是别人不一样，她的那些朋友，只是普通朋友而已，他们不需要为她负什么责任，不需要担心她有没有自己喜欢的事业，不需要关心她的工作有没有前途。所以他们可以总是说她喜欢听的话，总是迁就她的缺点。这，也许就是为什么我总不能哄她开心的原因吧。她跟朋友在一起的时间不多，所以他们在一起的时候，总会做一些很开心很值得回味的事情。可是这又和我不一样，我和她，要面对的是每一天的生活，有时候单调而乏味的每一天。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lijiansong/acm-algorithms/blob/master/CodeForces/woj/%E7%96%AF%E7%8B%82%E7%9A%84%E7%A8%8B%E5%BA%8F%E5%91%98.mobi&quot;&gt;link…&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 05 Feb 2017 13:42:13 +0800</pubDate>
        <link>http://lijiansong.github.io/temper/2017/02/05/crazy-coder/</link>
        <guid isPermaLink="true">http://lijiansong.github.io/temper/2017/02/05/crazy-coder/</guid>
        
        <category>Temper</category>
        
        
        <category>Temper</category>
        
      </item>
    
      <item>
        <title>Block Chain</title>
        <description>&lt;div class=&quot;message&quot;&gt;
  Recently, there is a hot term named blockchain, in Chinese is &amp;#x201C;&amp;#x533A;&amp;#x5757;&amp;#x94FE;&amp;#x201D;. I made some research on it. A blockchain &amp;#x2014; originally block chain &amp;#x2014; is a distributed database that maintains a continuously-growing list of records called blocks. Each block contains a timestamp and a link to a previous block.
&lt;/div&gt;
&lt;p&gt;&lt;!-- more --&gt;
  ## &lt;strong&gt;Introduction&lt;/strong&gt;
  &lt;br /&gt;The first blockchain was conceptualised by &lt;a href=&quot;(https://en.wikipedia.org/wiki/Satoshi_Nakamoto)&quot;&gt;Satoshi Nakamoto&lt;/a&gt; in 2008 and implemented the following year as a core component of the digital currency &lt;a href=&quot;https://en.wikipedia.org/wiki/Bitcoin&quot;&gt;bitcoin&lt;/a&gt;, where it serves as the public ledger for all transactions. The bitcoin design has been the inspiration for other applications.
  By design blockchains are inherently resistant to modification of the data. Decentralised consensus can therefore be achieved for the first time with a blockchain. This offers the potential of mass disintermediation and vast repercussions for how global trade is conducted. Side chains and blockchain based smart contracts are not currently used but an effort to develop those concepts is taking place. The technology is not mature and has a low readiness level.&lt;/p&gt;

&lt;p&gt;## &lt;strong&gt;History&lt;/strong&gt;
  &lt;br /&gt;The blockchain format was first used for bitcoin, as a solution to the problem of making a database both secure and not requiring a trusted administrator.
  In August 2014, the bitcoin blockchain file size reached 20 gigabytes in size.&lt;/p&gt;

&lt;p&gt;As of 2014, “Blockchain 2.0” was a term referring to new applications of the distributed blockchain database.
The Economist described one implementation of this second-generation programmable blockchain as coming with “a programming language that allows users to write more sophisticated smart contracts, thus creating invoices that pay themselves when a shipment arrives or share certificates which automatically send their owners dividends if profits reach a certain level.”&lt;/p&gt;

&lt;p&gt;In 2016, the central securities depository of the Russian Federation (NSD) announced a pilot project based on blockchain technology. 
Various regulatory bodies in the music industry have started testing models that use blockchain technology for royalty collection and management of copyrights around the world.
IBM opened a blockchain innovation research centre in Singapore in July 2016. 
A working group for the World Economic Forum met in November 2016 to discuss the development of governance models related to blockchain.&lt;/p&gt;

&lt;p&gt;## &lt;strong&gt;Open Source Project&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/hyperledger/hyperledger&quot;&gt;HyperLedger&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ripple/rippled&quot;&gt;Ripple&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/openblockchain&quot;&gt;openblockchain&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/DigitalAssetCom/hlp-candidate&quot;&gt;HLP-Candidate&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ElementsProject/elements&quot;&gt;Elements Project&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/IBM-Blockchain/marbles&quot;&gt;Marbles&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/openchain/openchain&quot;&gt;Openchain&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/HydraChain/hydrachain&quot;&gt;HydraChain&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blockstrap.com/&quot;&gt;blockstrap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;##&lt;strong&gt;Ref&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Blockchain_(database)&quot;&gt;block chain on wikipedia…&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blockchaindev.org/&quot;&gt;block chain dev…&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.blockchain.com/&quot;&gt;Block Chain&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blockchain.info/&quot;&gt;blockchain.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 11 Nov 2016 21:02:15 +0800</pubDate>
        <link>http://lijiansong.github.io/tech/2016/11/11/block-chain/</link>
        <guid isPermaLink="true">http://lijiansong.github.io/tech/2016/11/11/block-chain/</guid>
        
        <category>News</category>
        
        
        <category>Tech</category>
        
      </item>
    
      <item>
        <title>The Little Prince</title>
        <description>&lt;div class=&quot;message&quot;&gt;
  Something is wrong with the relationship between my girl friend and me these days. But I believe tomorrow will be better, and everything will be better. &lt;br /&gt;
  It is only with the heart that one can see rightly; what is essential is invisible to the eyes...
&lt;/div&gt;
&lt;p&gt;&lt;!-- more --&gt;
  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;Life has been so hard, sometimes i need to think such a question: what i have? what can i give to her? what can i promise her with and what is she want?&lt;/code&gt;&lt;br /&gt;
  The following snippets are excerpted from &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Little_Prince&quot;&gt;The Little Prince…&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;If someone loves a flower, of which just one single blossom grows in all the millions and millions of stars, it is enough to make him happy just to look at the stars. He can say to himself, “Somewhere, my flower is there…” But if the sheep eats the flower, in one moment all his stars will be darkened… And you think that is not important!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Flowers are so inconsistent! But I was too young to know how to love her…For she did not want him to see her crying. She was such a proud flower…&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;My flower is ephemeral, and she has only four thorns to defend herself against the world. And I have left on my planet, all alone!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;His flower had told him that she was only one of her kind in all universe. And here were five thousand of them, all alike, in one single garden!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I thought that I was rich, with a flower that was unique in all the world; and all I had was a common rose. A common rose…&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;To me, you are still nothing more than a little boy who is just like a hundred thousand other little boys. And I have no need of you. And you, on your part, have no need of me. To you, I am nothing more than a fox like a hundred thousand other foxes. &lt;code class=&quot;highlighter-rouge&quot;&gt;But if you tame me, then we shall need each other. To me, you will be unique in all the world. To you, I shall be unique in all the world&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The wheat fields have nothing to say to me. And that is sad. But you have hair that is the color of gold. Think how wonderful that will be when you have tamed me! The grain, which is also golden, will bring me back the thought of you. And I shall love to listen to the wind in the wheat.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It is your own fault, I never wished you any sort of harm; but you wanted me to tame you… but now you are going to cry! Then it has done you no good at all!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It has done me good, because of the color of the wheat fields. Go and look again at the roses. You will understand now that yours is unique in all the world.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;And now here is my secret, a very simple secret. &lt;code class=&quot;highlighter-rouge&quot;&gt;It is only with the heart that one can see rightly; what is essential is invisible to the eyes&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It is the time you have wasted for your rose that makes your rose so important.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Men have forgotten this truth. But you must not forget it. You become responsible, forever, for what you have tamed. You are responsible for your rose…&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Only the children know what they are looking for. They waste their time over a rag doll and it becomes very important to them; and if anybody takes it away from them, they cry…&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;As for me, if I had fifty-three minutes to spend as I liked, I should walk at my leisure toward a spring of fresh water.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The stars are beautiful, because of a flower that cannot be seen.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What makes the desert beautiful is that somewhere it hides a well…&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The house, the stars, the desert – what gives them their beauty is something that is invisible!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What moves me so deeply, about this little prince who is sleeping here, is his loyalty to a flower – the image of a rose that shine through his whole being like the flame of a lamp, even when he is asleep…&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The men where you live, raise five thousand roses in the same garden – and they do not find in it what they are looking for. And yet what they are looking for could be found in one single rose, or in a little water. But eyes are blind. One must look with the heart…&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;All men have the stars, but they are not the same things for different people. For some, who are travelers, the stars are guides. For others they are no more than little lights in the sky. For others, who are scholars, they are problems. For my businessman they were wealth. But all these stars are silent. You – you alone – will have the stars as no one else has them…&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In one of the stars I shall be living. In one of them I shall be laughing. And so it will be as if all the stars were laughing, when you look at the sky at night… You – only you – will have stars that can laugh…&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;And when your sorrow is comforted time soothes all sorrows you will be content that you have known me. You will always be my friend. You will want to laugh with me. And you will sometimes open your window, so, for that pleasure… And your friends will be properly astonished to see you laughing as you look up at the sky! Then you will say to them, “Yes, the stars always make me laugh!”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;And no grown-ups will ever understand that this is a matter of so much importance!&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 29 Oct 2016 21:35:15 +0800</pubDate>
        <link>http://lijiansong.github.io/temper/2016/10/29/2016-the-little-prince/</link>
        <guid isPermaLink="true">http://lijiansong.github.io/temper/2016/10/29/2016-the-little-prince/</guid>
        
        <category>Temper</category>
        
        
        <category>Temper</category>
        
      </item>
    
      <item>
        <title>2016 Study Plan</title>
        <description>&lt;div class=&quot;message&quot;&gt;
  It has been a long day since new term begins. Numerous life trivial needs to be done, such as purchasing house and living things, going through all the formalities, and etc.
&lt;/div&gt;
&lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;The whole year’s work depends on a good start. Since I am studying for a doctor’s degree, I need to develop all kinds of ability to improve myself, such as&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the ability to lead a team. I always insist that the difference between doctor and master is that a doctor has enough time to develop his or her team-leading ability. A new problem comes, a doctor is supposed to be clear about it, and guide his team to solve it in a short time.&lt;/li&gt;
  &lt;li&gt;the ability of programming. I also believe that a doctor’s programming ability should be no less than a master’s.&lt;/li&gt;
  &lt;li&gt;the capacity for scientific resaerch. A doctor should keep him updated about the latest development on his domain, and be clear about its strengths and weaknesses.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Actions speak louder than words. This year I have to learn some basic knowledge on &lt;strong&gt;distributed computing, compilation technology and data mining&lt;/strong&gt;.
Numerous books need to be read.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Spark…&lt;/li&gt;
  &lt;li&gt;Hadoop…&lt;/li&gt;
  &lt;li&gt;Storm…&lt;/li&gt;
  &lt;li&gt;Kafka…&lt;/li&gt;
  &lt;li&gt;Docker…&lt;/li&gt;
  &lt;li&gt;Mahout…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Besides the above, I also have to spare some time to get a driver license.
I also want to take part in some programming contest, such as &lt;strong&gt;ACM/ICPC, or CCPC&lt;/strong&gt;, and etc, which are very interesting.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MAN, CHEER UP!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.pgbovine.net/PhD-memoir/pguo-PhD-grind.pdf&quot;&gt;THE PH.D GRIND&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 03 Sep 2016 21:35:15 +0800</pubDate>
        <link>http://lijiansong.github.io/temper/2016/09/03/2016-study-plan/</link>
        <guid isPermaLink="true">http://lijiansong.github.io/temper/2016/09/03/2016-study-plan/</guid>
        
        <category>Temper</category>
        
        
        <category>Temper</category>
        
      </item>
    
      <item>
        <title>Chris Lattner's Homepage</title>
        <description>&lt;div class=&quot;message&quot;&gt;
Born in 1978, Chris Lattner is an American software developer, best known as the main author of LLVM and related projects, such as the compiler Clang and the programming language Swift. As of 2016, he works at Apple Inc., as Director of the Developer Tools department, leading the Xcode, Instruments, and compiler teams.

&lt;/div&gt;
&lt;!-- more --&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog-img/2016_08_25_ChrisPhoto3.png&quot; alt=&quot;image&quot; title=&quot;Chris Lattner&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In late 2000, Lattner joined the University of Illinois at Urbana-Champaign(UIUC) as a research assistant and M.Sc. student. While working with Vikram Adve, he designed and began implementing LLVM, an innovative infrastructure for optimizing compilers, which was the subject of his 2002 M.Sc. thesis. He completed his Ph.D. in 2005, researching new techniques for optimizing pointer-intensive programs and adding them to LLVM.&lt;/p&gt;

&lt;h1 id=&quot;more&quot;&gt;More…&lt;/h1&gt;

&lt;p&gt;[1] &lt;a href=&quot;https://en.wikipedia.org/wiki/Chris_Lattner&quot;&gt;Wikipedia, Chris Lattner&lt;/a&gt;&lt;br /&gt;
[2] &lt;a href=&quot;http://nondot.org/sabre/&quot;&gt;Chris Lattner’s Homepage&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 25 Aug 2016 00:00:00 +0800</pubDate>
        <link>http://lijiansong.github.io/thumb/2016/08/25/Chris-Lattner-Homepage/</link>
        <guid isPermaLink="true">http://lijiansong.github.io/thumb/2016/08/25/Chris-Lattner-Homepage/</guid>
        
        <category>People</category>
        
        
        <category>Thumb</category>
        
      </item>
    
      <item>
        <title>Config File Parser</title>
        <description>&lt;div class=&quot;message&quot;&gt;
  This archive is about how to use Flex and Bison (Yacc) to parse config files that is self-defined. 
&lt;/div&gt;
&lt;p&gt;The contens is shown below:&lt;br /&gt;
&lt;!-- more --&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#description-file-design&quot;&gt;Description File Design&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#key-values&quot;&gt;Key-Values&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#inheritance-mechanism&quot;&gt;Inheritance Mechanism&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#induction-mechanism&quot;&gt;Induction Mechanism&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#syntax-design&quot;&gt;Syntax Design&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#usage&quot;&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;description-file-design&quot;&gt;Description File Design&lt;/h2&gt;

&lt;h3 id=&quot;key-values&quot;&gt;Key-Values&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Format of the config file is similar to JSON, which is composed of pairs of key-values. The config file is also composed of some tuples, which contain some pairs of key-values. e.g.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;key1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;string&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;key2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;12.34&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;Therefore,&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;string&quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;12.34&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;inheritance-mechanism&quot;&gt;Inheritance Mechanism&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Besides the features above, the config file also supports inheritance mechanism. The symbol of inheritance is shown by “:”, e.g.&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;derived_section&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;key1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;override string&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;key3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;Therefore,&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;derived_section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;override string&quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;derived_section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;12.34&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;derived_section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;The types of the config file include int, float, string.&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;induction-mechanism&quot;&gt;Induction Mechanism&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;The config file also introduces induction mechanism, which is expressed by “include”, e.g.&lt;br /&gt;
The contents of a.config:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;section_a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;key1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;string&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;key2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;12.34&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;The contents of b.config:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;path/a.config&quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;section_b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;key1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;str1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;key2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;12.34&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;key1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;key2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;section_b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;key1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;key3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;33&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;section_a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;key1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;str&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;key2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;comments&quot;&gt;Comments&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;The config file also supports comments, formularized by /&lt;em&gt;comments&lt;/em&gt;/ or //, e.g.&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//comment&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;key1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* comment*/&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;string&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;key2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;12.34&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;syntax-design&quot;&gt;Syntax Design&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;To parse the config file, flex &amp;amp; bison is of much efficiency. Before using the mature tools, we have to define the grammar in advance, which is formularized by Backus-Naur Form. The config files’ Backus-Naur Form is shown below:&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tuples::= tuple tuples | \epsilon
tuples::= ID LB entries RB | ID COLON LB entries RB
entries::= kv entries | tuple entries | \epsilon
kv::= ID EQ value END
value::= FLOAT | INT | ctring | NULLV
cstring::= STRING cstring

INT-&amp;gt;[0-9]+
FLOAT-&amp;gt;[+-]?[0-9]+(\.[0-9]*)?
STRING-&amp;gt;\&quot;(\\.|[^\\&quot;])*\&quot;
ID-&amp;gt;[a-z_][a-z0-9_\.]*
LB-&amp;gt;{
RB-&amp;gt;}
COLON-&amp;gt;:
EQ-&amp;gt;=
END-&amp;gt;;
NULLV-&amp;gt;NULL
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;To Compile the source code, you need to install git &amp;amp; make. You can use the following command line to complie them:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clone&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//github.com/lijiansong/ConfigFileParser&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ConfigFileParser&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;make&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;After the above cmds, you would get an executable file, named &lt;em&gt;config_parser&lt;/em&gt;, and a static library suffixed by &lt;em&gt;.a&lt;/em&gt;, named &lt;em&gt;lib_cfg_parser.a&lt;/em&gt;. You can execute it like this( before use it you need to write a config file that is formulized by the grammar defined above ):&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config_parser&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;You can also call the static library &lt;em&gt;lib_cfg_parser.a&lt;/em&gt; in your own program.&lt;br /&gt;&lt;a href=&quot;https://github.com/lijiansong/ConfigFileParser&quot;&gt;To learn more…&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/lijiansong/ConfigFileParser/issues&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 22 Aug 2016 00:00:00 +0800</pubDate>
        <link>http://lijiansong.github.io/yacc/cpp/2016/08/22/config-file-parser/</link>
        <guid isPermaLink="true">http://lijiansong.github.io/yacc/cpp/2016/08/22/config-file-parser/</guid>
        
        <category>IDL</category>
        
        <category>platform tool</category>
        
        
        <category>Yacc</category>
        
        <category>Cpp</category>
        
      </item>
    
      <item>
        <title>Libs-Manager-Engine</title>
        <description>&lt;div class=&quot;message&quot;&gt;
  I have been coding an platform recently, which can manage library binaries on end users devices, such as android, iOS and so on.

&lt;/div&gt;

&lt;p&gt;The platform is a Service Store, which just like the app store in android, where delelopers develop their own apps and deploy them onto the app store, and users can download the app that they like and install it on his or her devices. Therefore, android’s app store can be treated as an ecological system.
&lt;!-- more --&gt;
However, our Service Store is also an ecological system, where the Service Manufacture or Lib Developers can develop their own Cloud Services or Native Services, and users can connect to the service they like on their end devices, e.g. &lt;em&gt;Voice Recognition Service&lt;/em&gt;, &lt;em&gt;Face Detection Service&lt;/em&gt;, etc. The technical architecture of the platform is shown below.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Technical Architecture&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog-img/2016_08_17_arch.png&quot; alt=&quot;image&quot; title=&quot;Technical Architecture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On Andrioid platform, it provides &lt;a href=&quot;https://developer.android.com/guide/components/aidl.html&quot;&gt;&lt;em&gt;AIDL&lt;/em&gt;&lt;/a&gt; for developers. AIDL (Android Interface Definition Language) is similar to other IDLs you might have worked with. It allows you to define the programming interface that both the client and service agree upon in order to communicate with each other using interprocess communication (IPC). On Android, one process cannot normally access the memory of another process. So to talk, they need to decompose their objects into primitives that the operating system can understand, and marshall the objects across that boundary for you. The code to do that marshalling is tedious to write, so Android handles it for you with AIDL. With AIDL, developers don’t need to know the underlying Binder mechanisms.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Refer to the OpenCV Manager Mauual.
Just like the OpenCV Manager, the Engine Manager is also an Android service targeted to manage OpenCV library binaries on end users devices. It allows sharing the dynamic libraries between applications on the same device, such as Face Detection lib, Voice Recognition lib. The Engine Manager provides the following benefits:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Less memory usage. All apps use the same binaries from service and do not have to keep the native libs inside themselves;&lt;/li&gt;
  &lt;li&gt;Hardware specific optimizations for all supported platforms, such as the different CPU-Arch of Android platform;&lt;/li&gt;
  &lt;li&gt;Once the Engine is released, all the Service Libraries will be trusted library source. All packages with OpenCV should be published on Google Play market or Apple’s App Store;&lt;/li&gt;
  &lt;li&gt;Regular updates and bug fixes;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://github.com/lijiansong/Libs-Manager-Engine/blob/master/engine/README.md&quot;&gt;Learn more details…&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/lijiansong/Libs-Manager-Engine/issues&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 17 Aug 2016 00:00:00 +0800</pubDate>
        <link>http://lijiansong.github.io/android/java/2016/08/17/libs-manager-engine/</link>
        <guid isPermaLink="true">http://lijiansong.github.io/android/java/2016/08/17/libs-manager-engine/</guid>
        
        <category>IDL</category>
        
        <category>platform tool</category>
        
        
        <category>Android</category>
        
        <category>Java</category>
        
      </item>
    
  </channel>
</rss>
